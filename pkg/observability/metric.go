package observability

// MetricType describes how the metric should be interpreted by collectors.
type MetricType string

const (
	// MetricCounter increases monotonically and is reset on process restart.
	MetricCounter MetricType = "counter"
	// MetricHistogram captures a distribution of observed values.
	MetricHistogram MetricType = "histogram"
)

// Metric represents a single measurement to be recorded by a metrics backend.
type Metric struct {
	Name        string
	Type        MetricType
	Value       float64
	Labels      map[string]string
	Description string
	Unit        string
}

// MetricsCollector consumes metrics generated by the coordinator.
type MetricsCollector interface {
	Collect(Metric)
}

// MetricsCollectorFunc allows plain functions to satisfy MetricsCollector.
type MetricsCollectorFunc func(Metric)

// Collect implements MetricsCollector.
func (f MetricsCollectorFunc) Collect(metric Metric) { f(metric) }

// NoopMetricsCollector discards all received metrics.
type NoopMetricsCollector struct{}

// Collect implements MetricsCollector.
func (NoopMetricsCollector) Collect(Metric) {}
